STANDARD DATA DICTIONARY #757.033 -- CHARACTER POSITIONS FILE                                                                                                                                                                      NOV 6,2014@13:36:04  PAGE 1
STORED IN ^LEX(757.033,  (308589 ENTRIES)   SITE: PLA.ISC-WASH.DOMAIN.EXT   UCI: VISTA,PLA                                                                                                                                                    (VERSION 2.0)   

DATA          NAME                  GLOBAL        DATA
ELEMENT       TITLE                 LOCATION      TYPE
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
This file contains the definition of a character position in a code of a coding system where the character positions have meaning.  


              DD ACCESS: @
              RD ACCESS: @
              WR ACCESS: @
             DEL ACCESS: @
           LAYGO ACCESS: @
           AUDIT ACCESS: @

CROSS
REFERENCED BY: IDENTIFIER(B)

INDEXED BY:    SOURCE (ACP), STATUS EFFECTIVE DATE (AFRAG), NAME/TITLE (NAME)


757.033,.01   IDENTIFIER             0;1 FREE TEXT (Required)

              INPUT TRANSFORM:  K:$L(X)>30!($L(X)<4)!'(X'?1P.E) X
              LAST EDITED:      MAR 18, 2012 
              HELP-PROMPT:      Enter a unique identifier, 4-30 characters in length. 
              DESCRIPTION:
                                This is a unique identifier consisting of the source abbreviation and a code fragment.  

              CROSS-REFERENCE:  757.033^B 
                                1)= S ^LEX(757.033,"B",$E(X,1,30),DA)=""
                                2)= K ^LEX(757.033,"B",$E(X,1,30),DA)
                                ^LEX(757.033,"B",UID,IEN) - Where UID is a unique identifier for a character position and IEN is the internal entry number where the unique identifier is stored.  



757.033,.02   FRAGMENT               0;2 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>30!($L(X)<1) X
              LAST EDITED:      MAR 18, 2012 
              HELP-PROMPT:      Enter a code fragment, 1-30 characters in length. 
              DESCRIPTION:
                                This is a portion of a code (fragment) that specifies a character (last character of the fragment) and a character position (length of fragment). 


757.033,.03   DATE ENTERED           0;3 DATE

              INPUT TRANSFORM:  S %DT="E" D ^%DT S X=Y K:3110913>X X
              LAST EDITED:      MAR 17, 2012 
              HELP-PROMPT:      Enter a date, not earlier than SEP 13, 2011. 
              DESCRIPTION:
                                This is the date the code fragment was initially entered.  


757.033,.04   SOURCE                 0;4 POINTER TO CODING SYSTEMS FILE (#757.03)

              LAST EDITED:      MAR 23, 2012 
              HELP-PROMPT:      Enter the coding system (source) for the code fragment. 
              DESCRIPTION:
                                This is the coding system (source) that the code fragment belongs to.  

              FIELD INDEX:      ACP (#1139)    MUMPS    IR    SORTING ONLY
                  Short Descr:  Character/Position
                  Description:  ^LEX(757.033,"ACP",SRC,CP,IEN) - Where SRC is the coding system, CP is the leading character appended to the character position, and IEN is the Internal Entry Number where the character and character position is stored. 
                                This cross-reference supports data loading and verification (file maintenance only).  
                    Set Logic:  S ^LEX(757.033,"ACP",X(1),X(2),DA)=""
                   Kill Logic:  K ^LEX(757.033,"ACP",X(1),X(2),DA)
                   Whole Kill:  K ^LEX(757.033,"ACP")
                         X(1):  SOURCE  (757.033,.04)  (Subscr 1)  (forwards)
                         X(2):  Computed Code: S X=$E($P($G(^LEX(757.033,DA,0)),U,2),1)_$L($P($G(^LEX(757.033,DA,0)),U,2))_" "
                                  (Subscr 2)  (Len 3)


757.033,.05   DETAILS                0;5 SET

                                '1' FOR YES; 
              LAST EDITED:      MAR 18, 2012 
              HELP-PROMPT:      Enter 'Yes' if this code fragment has additional details. 
              DESCRIPTION:
                                This is a flag to indicate if the fragment should have additonal details, i.e., description, explanation or inclusions.  


757.033,1     STATUS                 1;0 DATE Multiple #757.331

              DESCRIPTION:
                                This multiple tracks the activation status of a code fragment.  


757.331,.01     STATUS EFFECTIVE DATE  0;1 DATE (Multiply asked)

                INPUT TRANSFORM:  S %DT="E" D ^%DT S X=Y K:3101001>X X
                LAST EDITED:      MAR 28, 2012 
                HELP-PROMPT:      Enter a date, not earlier than Oct 1, 2010. 
                DESCRIPTION:
                                  This the date that the status became effective.  

                CROSS-REFERENCE:  757.331^B 
                                  1)= S ^LEX(757.033,DA(1),1,"B",$E(X,1,30),DA)=""
                                  2)= K ^LEX(757.033,DA(1),1,"B",$E(X,1,30),DA)
                                  ^LEX(757.033,IEN1,1,"B",DATE,IEN2) - Where IEN1 is the file level internal entry number, DATE is the effective date of the status, and IEN2 is the STATUS sub-file internal entry number where the status is stored.  


                FIELD INDEX:      AFRAG (#1140)    MUMPS    IR    SORTING ONLY    WHOLE FILE (#757.033)
                    Short Descr:  Fragment
                    Description:  ^LEX(757.033,"AFRAG",SRC,FRAG,EFF,IEN) = Where SRC is a pointer to the CODING SYSTEMS file #757.03 for the source of the fragment, FRAG is a code fragment, EFF is the active effective date of the fragment, IEN is where
                                  the fragment is stored.  This cross-reference is only set when the status is active.  A reverse $ORDER will find the last active code fragment for a source.  
                      Set Logic:  S ^LEX(757.033,"AFRAG",X(1),X(2),X(3),DA(1),DA)=""
                       Set Cond:  S X=$P(^LEX(757.033,DA(1),1,DA,0),"^",2)
                     Kill Logic:  K ^LEX(757.033,"AFRAG",X(1),X(2),X(3),DA(1),DA)
                     Whole Kill:  K ^LEX(757.033,"AFRAG")
                           X(1):  Computed Code: S X=+($P(^LEX(757.033,DA(1),0),"^",4))
                                    (Subscr 1)  (Len 5)  (forwards)
                           X(2):  Computed Code: S X=($P(^LEX(757.033,DA(1),0),"^",2)_" ")
                                    (Subscr 2)  (Len 10)
                           X(3):  STATUS EFFECTIVE DATE  (757.331,.01)  (Subscr 3)  (Len 10)  (forwards)


757.331,.02     STATUS                 0;2 SET

                                  '1' FOR ACTIVE; 
                                  '0' FOR INACTIVE; 
                LAST EDITED:      MAR 17, 2012 
                HELP-PROMPT:      Enter the status of the code fragment. 
                DESCRIPTION:
                                  This field indicates the status (active or inactive) of the code fragment (.02).  




757.033,2     NAME/TITLE             2;0 DATE Multiple #757.332

              DESCRIPTION:
                                This is a history of names/titles for a character position identified by a code fragment.  


              INDEXED BY:       NAME/TITLE (C)

757.332,.01     NAME/TITLE EFFECTIVE DATE 0;1 DATE (Multiply asked)

                INPUT TRANSFORM:  S %DT="E" D ^%DT S X=Y K:3101001>X X
                LAST EDITED:      MAR 28, 2012 
                HELP-PROMPT:      Enter a date, not earlier than Oct 1, 2010. 
                DESCRIPTION:
                                  This is the date that the name or title became effective.  

                CROSS-REFERENCE:  757.332^B 
                                  1)= S ^LEX(757.033,DA(1),2,"B",$E(X,1,30),DA)=""
                                  2)= K ^LEX(757.033,DA(1),2,"B",$E(X,1,30),DA)
                                  ^LEX(757.033,IEN1,2,"B",DATE,IEN2) - Where IEN1 is the file level internal entry number, DATE is the effective date of the Name/Title, and IEN2 is the NAME/TITLE sub-file internal entry number where the Name or Title is
                                  stored.  



757.332,.02     NAME/TITLE             1;1 FREE TEXT

                INPUT TRANSFORM:  K:$L(X)>245!($L(X)<1) X
                LAST EDITED:      MAR 20, 2012 
                HELP-PROMPT:      Enter a name or title, 1-245 characters in length. 
                FIELD INDEX:      NAME (#1141)    REGULAR    IR    LOOKUP & SORTING    WHOLE FILE (#757.033)
                    Short Descr:  NAME
                    Description:  ^LEX(757.033,"NAME",NAME,IEN1,IEN2) - Where NAME is the 63-character uppercase Name or  Title of a character position, IEN1 is the file level internal entry number and IEN2 is the NAME/TITLE sub-file internal entry
                                  number where the Name or Title is stored.  
                      Set Logic:  S ^LEX(757.033,"NAME",$E(X,1,63),DA(1),DA)=""
                     Kill Logic:  K ^LEX(757.033,"NAME",$E(X,1,63),DA(1),DA)
                     Whole Kill:  K ^LEX(757.033,"NAME")
                           X(1):  NAME/TITLE  (757.332,.02)  (Subscr 1)  (Len 63)  (forwards)
                                    Transform (Storage):  S X=$$UP^XLFSTR(X)

                FIELD INDEX:      C (#1143)    REGULAR    IR    LOOKUP & SORTING
                    Short Descr:  Name or Title
                    Description:  ^LEX(757.033,IEN1,2,"C",NAME,IEN2) - Where IEN1 is the file level internal entry number, NAME is a 63 character, uppercase Name or Title for the character position, and IEN2 is the NAME/TITLE sub-file internal entry
                                  number where the Name or Title is stored.  
                      Set Logic:  S ^LEX(757.033,DA(1),2,"C",$E(X,1,63),DA)=""
                     Kill Logic:  K ^LEX(757.033,DA(1),2,"C",$E(X,1,63),DA)
                     Whole Kill:  K ^LEX(757.033,DA(1),2,"C")
                           X(1):  NAME/TITLE  (757.332,.02)  (Subscr 1)  (Len 63)  (forwards)
                                    Transform (Storage):  S X=$$UP^XLFSTR($E(X,1,63))




757.033,3     DESCRIPTION            3;0 DATE Multiple #757.043

              LAST EDITED:      MAR 18, 2012 
              DESCRIPTION:
                                This is a history of descriptions for a character position identified by a code fragment.  


              INDEXED BY:       DESCRIPTION (C)

757.043,.01     DESCRIPTION EFFECTIVE DATE 0;1 DATE (Multiply asked)

                INPUT TRANSFORM:  S %DT="E" D ^%DT S X=Y K:3101001>X X
                LAST EDITED:      MAY 08, 2012 
                HELP-PROMPT:      Enter a date, not earlier than Oct 1, 2010. 
                DESCRIPTION:
                                  This is the date the description became effective.  

                CROSS-REFERENCE:  757.043^B 
                                  1)= S ^LEX(757.033,DA(1),3,"B",$E(X,1,30),DA)=""
                                  2)= K ^LEX(757.033,DA(1),3,"B",$E(X,1,30),DA)
                                  ^LEX(757.033,IEN1,3,"B",DATE,IEN2) - Where IEN1 is the file level internal entry number, DATE is the effective date of the Description, and IEN2 is the DESCRIPTION sub-file internal entry number where the Description is
                                  stored.  



757.043,.02     DESCRIPTION            1;1 FREE TEXT

                INPUT TRANSFORM:  K:$L(X)>245!($L(X)<1) X
                LAST EDITED:      MAR 28, 2012 
                HELP-PROMPT:      Enter a description, 1-245 characters in length. 
                DESCRIPTION:      This is the description or definition of the character position identified by the code fragment.  
                                   
                                  Note:  ICD diagnosis (disease, syndrome, finding, injury or symptom) characters come with descriptions.  ICD procedure (laboratory, diagnostic or therapeutic activities) characters come with definitions.  

                FIELD INDEX:      C (#1142)    REGULAR    IR    LOOKUP & SORTING
                    Short Descr:  Description
                    Description:  ^LEX(757.033,IEN1,3,"C",DESC,IEN2) - Where IEN1 is the file level internal entry number, DESC is a 63 character, uppercase Description for the character position, and IEN2 is the DESCRIPTION sub-file internal entry
                                  number where the Description is stored.  
                      Set Logic:  S ^LEX(757.033,DA(1),3,"C",$E(X,1,63),DA)=""
                     Kill Logic:  K ^LEX(757.033,DA(1),3,"C",$E(X,1,63),DA)
                     Whole Kill:  K ^LEX(757.033,DA(1),3,"C")
                           X(1):  DESCRIPTION  (757.043,.02)  (Subscr 1)  (Len 63)  (forwards)
                                    Transform (Storage):  S X=$$UP^XLFSTR(X)




757.033,4     EXPLANATION            4;0 DATE Multiple #757.334

              LAST EDITED:      MAR 18, 2012 
              DESCRIPTION:
                                This is a history of Explanations for a character position identified by a code fragment.  


              INDEXED BY:       EXPLANATION (C)

757.334,.01     EXPLANATION EFFECTIVE DATE 0;1 DATE (Multiply asked)

                INPUT TRANSFORM:  S %DT="E" D ^%DT S X=Y K:3101001>X X
                LAST EDITED:      MAR 18, 2012 
                HELP-PROMPT:      Enter a date, not earlier than Oct 1, 2010. 
                DESCRIPTION:
                                  This is the effective date of the explanation.  

                CROSS-REFERENCE:  757.334^B 
                                  1)= S ^LEX(757.033,DA(1),4,"B",$E(X,1,30),DA)=""
                                  2)= K ^LEX(757.033,DA(1),4,"B",$E(X,1,30),DA)
                                  ^LEX(757.033,IEN1,4,"B",DATE,IEN2) - Where IEN1 is the file level internal entry number, DATE is the effective date of the explanation, and IEN2 is the EXPLANATION sub-file internal entry number where the explanation is
                                  stored.  



757.334,.02     EXPLANATION            1;1 FREE TEXT

                INPUT TRANSFORM:  K:$L(X)>245!($L(X)<1) X
                LAST EDITED:      MAR 20, 2012 
                HELP-PROMPT:      Enter an explanation, 1-245 characters in length. 
                DESCRIPTION:
                                  This is the explanation of the character identified by the code fragment.  The explanation, if present, provides further elaboration to the description or definition.  

                FIELD INDEX:      C (#1144)    REGULAR    IR    LOOKUP & SORTING
                    Short Descr:  Explanation
                    Description:  ^LEX(757.033,IEN1,4,"C",EXPL,IEN2) - Where IEN1 is the file level internal entry number, EXPL is a 63 character, uppercase Explanation for the character position, and IEN2 is the EXPLANATION sub-file internal entry
                                  number where the Explanation is stored.  
                      Set Logic:  S ^LEX(757.033,DA(1),4,"C",$E(X,1,63),DA)=""
                     Kill Logic:  K ^LEX(757.033,DA(1),4,"C",$E(X,1,63),DA)
                     Whole Kill:  K ^LEX(757.033,DA(1),4,"C")
                           X(1):  EXPLANATION  (757.334,.02)  (Subscr 1)  (Len 63)  (forwards)
                                    Transform (Storage):  S X=$$UP^XLFSTR(X)




757.033,5     INCLUDES               5;0 DATE Multiple #757.335

              LAST EDITED:      MAR 18, 2012 
              DESCRIPTION:
                                This is a history of terminology synonyms for the character identified by the code fragment.  There can be multiple synonyms.  


757.335,.01     INCLUDES EFFECTIVE DATE 0;1 DATE (Multiply asked)

                INPUT TRANSFORM:  S %DT="E" D ^%DT S X=Y K:3101001>X X
                LAST EDITED:      MAR 28, 2012 
                HELP-PROMPT:      Enter a date, not earlier than Oct 1, 2010. 
                DESCRIPTION:
                                  This is the date the synonym(s) to be included became effective.  

                CROSS-REFERENCE:  757.335^B 
                                  1)= S ^LEX(757.033,DA(1),5,"B",$E(X,1,30),DA)=""
                                  2)= K ^LEX(757.033,DA(1),5,"B",$E(X,1,30),DA)
                                  ^LEX(757.033,IEN1,5,"B",DATE,IEN2) - Where IEN1 is the file level internal entry number, DATE is the effective date of the included synonyms, and IEN2 is the INCLUDES sub-file internal entry number where the included
                                  synonym is stored.  



757.335,.02     INCLUDE                1;0 Multiple #757.345

                LAST EDITED:      MAR 20, 2012 
                DESCRIPTION:
                                  This is a list of synonyms to include.  


                INDEXED BY:       SYNONYM (B)

757.345,.01       SYNONYM                0;1 FREE TEXT (Multiply asked)

                  INPUT TRANSFORM:  K:$L(X)>245!($L(X)<1) X
                  LAST EDITED:      MAR 28, 2012 
                  HELP-PROMPT:      Enter a synonym, 1-245 characters in length. 
                  DESCRIPTION:
                                    This is a word or phrase that is synonymous with the NAME/TITLE field that should be included when referencing the character position.  

                  FIELD INDEX:      B (#1145)    REGULAR    IR    LOOKUP & SORTING
                      Short Descr:  Synonyms
                      Description:  ^LEX(757.033,IEN1,5,IEN2,1,"B",INC,IEN3) - Where IEN1 is the file level internal entry number, IEN2 is the INCLUDES sub-file internal entry number, INC is a 63 character, uppercase synonym to include with the character
                                    position, and IEN3 is the internal entry number of the INCLUDE sub-file where the included synonym is stored.  
                        Set Logic:  S ^LEX(757.033,DA(2),5,DA(1),1,"B",$E(X,1,63),DA)=""
                       Kill Logic:  K ^LEX(757.033,DA(2),5,DA(1),1,"B",$E(X,1,63),DA)
                       Whole Kill:  K ^LEX(757.033,DA(2),5,DA(1),1,"B")
                             X(1):  SYNONYM  (757.345,.01)  (Subscr 1)  (Len 63)  (forwards)
                                      Transform (Storage):  S X=$$UP^XLFSTR(X)







      FILES POINTED TO                      FIELDS

CODING SYSTEMS (#757.03)          SOURCE (#.04)



INPUT TEMPLATE(S):

PRINT TEMPLATE(S):

SORT TEMPLATE(S):

FORM(S)/BLOCK(S):