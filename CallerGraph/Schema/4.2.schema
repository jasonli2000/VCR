STANDARD DATA DICTIONARY #4.2 -- DOMAIN FILE                                                                                                                                                                                      MAY 20,2014@15:37:19  PAGE 1
STORED IN ^DIC(4.2,  (70 ENTRIES)   SITE: PLA.ISC-WASH.MED.VA.GOV   UCI: VISTA,PLA                                                                                                                                                            (VERSION 8.0)   

DATA          NAME                  GLOBAL        DATA
ELEMENT       TITLE                 LOCATION      TYPE
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
This file is used to name all of the domains to which MailMan messages may be routed.  Each name in this file corresponds to the right side of a MailMan address-the part following the "@".  
 
Domains may have synonyms, allowing users to name sites with one name, while MailMan uses the more formal Domain Naming conventions.  
 
This file also controls whether messages are queued for immediate transmission and into what queue they are dropped.  Any domain may have a relay domain, which controls the routing as follows: 
 
If a domain has a named relay domain, the message is put in the queue for the relay domain.  
 
If not, and the domain has a TRANSMISSION SCRIPT, then the message is put in the queue for that domain.  
 
Otherwise, the message is put in the queue for the Parent domain, as defined at MailMan initialization time.  


              DD ACCESS: @
              RD ACCESS: @
              WR ACCESS: @
             DEL ACCESS: @
           LAYGO ACCESS: @
           AUDIT ACCESS: @

POINTED TO BY: DOMAIN field (#.01) of the DOMAIN sub-field (#3.8161) of the DISTRIBUTION LIST File (#3.816) 
               PATH field (#6) of the RECIPIENT sub-field (#3.91) of the MESSAGE File (#3.9) 
               DOMAIN field (#60) of the INSTITUTION File (#4) 
               RELAY DOMAIN field (#2) of the DOMAIN File (#4.2) 
               NAME field (#.01) of the MESSAGE STATISTICS File (#4.2999) 
               DOMAIN NAME field (#.01) of the MAILMAN SITE PARAMETERS File (#4.3) 
               PARENT field (#3) of the MAILMAN SITE PARAMETERS File (#4.3) 
               SUBORDINATE DOMAIN field (#.01) of the SUBORDINATE DOMAIN sub-field (#4.31) of the MAILMAN SITE PARAMETERS File (#4.3) 
               DOMAIN NAME field (#.01) of the FOUNDATIONS SITE PARAMETERS File (#18.01) 
               DOMAIN NAME field (#6) of the INTERIM REPORTS File (#64.6) 
               DOMAIN FILE POINTER field (#21) of the BORROWERS/FILE AREAS File (#195.9) 
               REMOTE DOMAIN field (#22) of the AR TRANSMISSION RECORDS File (#349) 
               REMOTE DOMAIN field (#32) of the AR TRANSMISSION TYPE File (#349.1) 
               REMOTE DOMAIN field (#.02) of the DIVISION OF CARE sub-field (#349.161) of the AR TRANSMISSION TYPE File (#349.1) 
               DOMAIN field (#13) of the AR TRANSMISSION SEGMENTS File (#349.9) 
               PDX DOMAIN field (#3) of the *PDX PARAMETER File (#394.2) 
               NETWORK ADDRESS field (#1) of the WORK GROUP sub-field (#394.26) of the *PDX PARAMETER File (#394.2) 
               Domain field (#.02) of the VAQ - PARAMETER File (#394.81) 
               Remote Domain field (#.02) of the VAQ - RELEASE GROUP File (#394.82) 
               Remote Domain field (#.02) of the Remote Facility sub-field (#394.831) of the VAQ - OUTGOING GROUP File (#394.83) 
               OWNER DOMAIN field (#28) of the 2507 REQUEST File (#396.3) 
               *TRANSFERRED OUT TO field (#8) of the *EXAM sub-field (#396.327) of the 2507 REQUEST File (#396.3) 
               TRANSFERRED OUT TO field (#62) of the 2507 EXAM File (#396.4) 
               DOMAIN MAIL ROUTER field (#1) of the MAIL ROUTER sub-field (#407.71) of the TRANSMISSION ROUTERS File (#407.7) 
               CMOP DOMAIN field (#3) of the CMOP SYSTEM File (#550) 
               FACILITY DOMAIN field (#4) of the CMOP NATIONAL SITE File (#552) 
               TO STATION field (#34) of the LIBRARY TRANSACTIONS File (#682.1) 
               FACILITY_ID field (#.03) of the OBS File (#704.117) 
               DOMAIN field (#2) of the DESTINATION sub-field (#774.01) of the SUBSCRIPTION CONTROL File (#774) 
               DOMAIN field (#.01) of the SERVER LOCATIONS sub-field (#776.32) of the HL7 MONITOR EVENT TYPE File (#776.3) 
               DOMAIN field (#1) of the EEO SERVER PARAMETERS File (#789.5) 
               DOMAIN field (#.02) of the HL COMMUNICATION SERVER PARAMETERS File (#869.3) 
               MAILMAN DOMAIN field (#.03) of the HL LOGICAL LINK File (#870) 
               DOMAIN MAIL ROUTER field (#1) of the RECEIVING USER sub-field (#2101.12) of the GENERIC CODE SHEET BATCH TYPE File (#2101.1) 
               PROJECT PLANNING ROLLUP DOMAIN field (#100) of the ENG INIT PARAMETERS File (#6910) 
               PROJECT TRACKING ROLLUP DOMAIN field (#101) of the ENG INIT PARAMETERS File (#6910) 
               DOMAIN field (#9) of the NOIS LOCATION File (#7105.1) 
               DOMAIN NAME field (#.01) of the KERNEL SYSTEM PARAMETERS File (#8989.3) 
               ENTITY field (#.01) of the PARAMETERS File (#8989.5) 
               DOMAIN NAME field (#.01) of the RPC BROKER SITE PARAMETERS File (#8994.1) 
               REQUESTING PLACE field (#8) of the VAMC NETWORK HEALTH EXCHANGE File (#537000) 
               Records Available At field (#.01) of the Records Available At sub-field (#537010.04) of the VAMC NETWORK PATIENT File (#537010) 
               NAME field (#.01) of the VAMC NETWORK HEALTH AUTHORIZED SITES File (#537025) 
               

CROSS
REFERENCED BY: POLL LIST(AB), FLAGS(AC), DHCP ROUTING INDICATOR(AD), DIRECTORY REQUESTS FLAG(AE), TCP/IP POLL FLAG(ATCP), NAME(B), SYNONYM(C), TCP/IP POLL FLAG(D)

4.2,.01       NAME                   0;1 FREE TEXT (Required)

              The exact name of the domain, as used in network addressing                                                      
              INPUT TRANSFORM:  K:$L(X)>64!($L(X)<1) X I $D(X) D CHKNAME^XMXADDRD
              LAST EDITED:      MAY 18, 1999 
              HELP-PROMPT:      Answer must be 1-64 characters in length. 
              DESCRIPTION:      This name is the exact name of the domain, as used in network addressing.  It consists of "." (dot) pieces that are formed hierarchically starting at the right.  Domains with dot pieces to the left are administered by the 
                                domain whose domain name consists of its name less the 1st dot piece.  For example:  A.DOMAIN.COM is administered by DOMAIN.COM.  
                                 
                                The domain name may be from 1 to 64 characters.  
                                 
                                Each dot piece may be up to 20 characters, and must begin with an alpha or numeric, and be composed of only alpha, numeric, or "-" characters.  

              TECHNICAL DESCR:  Although the standard says that domain names may be 255 characters, and each dot piece may be 63 characters, MailMan must limit these, because of operating system restrictions.  MailMan places addresses in globals such as
                                ^TMP("XMY0",$J,<name@site>)="".  If the address is too long, it can cause an invalid subscript error.  

              NOTES:            XXXX--CAN'T BE ALTERED EXCEPT BY PROGRAMMER

              CROSS-REFERENCE:  4.2^B 
                                1)= S ^DIC(4.2,"B",$E(X,1,30),DA)=""
                                2)= K ^DIC(4.2,"B",$E(X,1,30),DA)


4.2,1         FLAGS                  0;2 FREE TEXT

              INPUT TRANSFORM:  K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<1) X S:$D(X) X=$$UP^XLFSTR(X)
              LAST EDITED:      APR 22, 2002 
              HELP-PROMPT:      C=CLOSED, S=SEND, Q=QUEUE, N=NO-FORWARD, P=POLL, T=TALKMAN ENABLED 
              DESCRIPTION:      The flags field controls the flow of messages to this domain from the local node.  Flags are: 
                                 
                                S = Send.  MailMan should start a TaskMan task to transmit the message as soon as the message is received.  
                                 
                                C = Close.  MailMan will not allow users to address mail to this domain.  
                                 
                                Q or "" (the null string) = Queue.  MailMan will not deliver until a task is explicitly created to deliver the mail.  
                                 
                                P = Poll.  A TaskMan task will poll all domains with this flag.  
                                 
                                N = NO-forward.  MailMan will not allow messages to be forwarded to this domain.  
                                 
                                T = Talkman enabled.  The presence of this flag allows Talkman to be used at your site.  It is also necessary to put a 'T' command into the script so that TalkMan will be invoked properly.  

              NOTES:            XXXX--CAN'T BE ALTERED EXCEPT BY PROGRAMMER

              CROSS-REFERENCE:  4.2^AC^MUMPS 
                                1)= I X["P" S ^DIC(4.2,"AC","P",DA)=""
                                2)= K ^DIC(4.2,"AC","P",DA)
                                This cross reference keeps track of domains that have the polling flag on.  



4.2,1.5       SECURITY KEY           0;11 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>30!($L(X)<1) X I $D(X) I '$D(^DIC(19.1,"B",X)) W !,*7,"Security key must exactly match an existing security key name" K X
              LAST EDITED:      FEB 25, 1986 
              HELP-PROMPT:      Enter the exact name of a security required of the user to address this domain. 
              DESCRIPTION:
                                This field, if defined, names a security key which must be held by the sender.  If the sender does not have this key, then he may not address this domain.  

              NOTES:            XXXX--CAN'T BE ALTERED EXCEPT BY PROGRAMMER


4.2,1.6       VALIDATION NUMBER      0;15 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<1000000)!(X?.E1"."1N.N) X
              LAST EDITED:      OCT 09, 1986 
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 1000000 AND 99999999 
              DESCRIPTION:
                                This field is used for security.  If filled in any messaging services that contact you will need to know the value of this field, or their requests will be ignored.  Messaging services = other MailMan domains.  

              READ AUTHORITY:   ^

4.2,1.61      NEW VALIDATION NUMBER  0;18 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<1000000)!(X?.E1"."1N.N) X
              LAST EDITED:      NOV 12, 1996 
              HELP-PROMPT:      Type a Number between 1000000 and 99999999, 0 Decimal Digits 
              DESCRIPTION:      This field is used for security.  It is a temporary value, it is set when a new validation number is negotiated with another Domain. It is moved to the Validation Number, field 1.6, after it is confirmed by the other
                                Domain.  


4.2,1.7       DISABLE TURN COMMAND   0;16 SET

                                'y' FOR YES; 
                                'n' FOR NO; 
              LAST EDITED:      OCT 07, 1986 
              DESCRIPTION:      This field, if set to "YES", means that a remote domain calling this domain will not be able to execute the SMTP TURN command.  This means that the sending domain must open the link.  This allows an extra measure of
                                security, to insure that the sending domain establishes the link.  


4.2,2         RELAY DOMAIN           0;3 POINTER TO DOMAIN FILE (#4.2)

              LAST EDITED:      MAR 30, 1984 
              HELP-PROMPT:      NAME OF DOMAIN TO SEND MESSAGES TO IF NO DIRECT PATH 
              DESCRIPTION:      This is the name of the domain, if any, to which messages are to be always routed.  For example, if traffic from Los Angeles to Washington is always to be routed through San Francisco, then the RELAY DOMAIN for Los Angeles
                                is defined to be San Francisco.  
                                 
                                The relay domain overides any other path determination processes, such as scripts and parent domains.  


4.2,4         TRANSMISSION SCRIPT    1;0 Multiple #4.21

              DESCRIPTION:      See the Technical Description for how this field is used in implicit routing by the name server.  This field should always have at least one Script command in it unless implicit routing is desirable.  Each line of this
                                text field is interpreted by the MailMan script processor.  
                                 
                                There are commands to be used: 
                                 
                                  Open 
                                  Device 
                                  Wait 
                                  Xecute 
                                  Call 
                                 
                                These commands are described in other documentation.  

              TECHNICAL DESCR:  MailMan looks at this field at two different points.  The most obvious is that this field contains a script that is interpreted by the script processor.  This gives results that are explicitely defined.  
                                 
                                However, this field is also looked at by the name server to determine implicit routing.  The implication to the system, if this field is not defined is that the local system does not know how to deliver mail to this
                                domain.  (There are no directions in the form of a Transmission Script to tell MailMan what to do.)  Since, this system doesn't know how to deliver the message, it is assumed that the parent of this system does know.  
                                Therefore, if a domain has no data at all in the Transmission Script field, MailMan routes messages sent to it to the local domain's parent.  This often occurs with subdomains.    No protection exists to prevent infinite
                                loops of transmissions that can occur when the parent has no entry for the subdomain and therefore implicitely assumes that it should route the message to the subdomain's creator.  Other problems that do not cause systems
                                to be misued have can still occur, also.  


4.21,.01        TRANSMISSION SCRIPT    0;1 FREE TEXT (Multiply asked)

                A free text string of 1 to 10 characters identifying the script.                                               
                INPUT TRANSFORM:  K:$L(X)>10!($L(X)<1) X
                LAST EDITED:      APR 22, 2002 
                HELP-PROMPT:      ANSWER MUST BE 1-10 CHARACTERS IN LENGTH 
                DESCRIPTION:
                                  This is the name of the transmission script.  

                CROSS-REFERENCE:  4.21^B 
                                  1)= S ^DIC(4.2,DA(1),1,"B",$E(X,1,30),DA)=""
                                  2)= K ^DIC(4.2,DA(1),1,"B",$E(X,1,30),DA)


4.21,1          PRIORITY               0;2 NUMBER

                INPUT TRANSFORM:  K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
                LAST EDITED:      MAR 17, 1993 
                HELP-PROMPT:      Type a Number between 0 and 9999, 0 Decimal Digits 
                DESCRIPTION:
                                  This field is used by MailMan to decide which script to play when trying to transmit messages in background.  The higher the number the lower the priority for being chosen.  See also the Number of Attempts field.  

                CROSS-REFERENCE:  4.21^AC 
                                  1)= S ^DIC(4.2,DA(1),1,"AC",$E(X,1,30),DA)=""
                                  2)= K ^DIC(4.2,DA(1),1,"AC",$E(X,1,30),DA)
                                  This cross reference controls which transmission script will be used to trnsmit messages.  The highest priority script wil be used first.  Low numbers mean high priority.  



4.21,1.1        NUMBER OF ATTEMPTS     0;3 NUMBER

                INPUT TRANSFORM:  K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
                LAST EDITED:      MAR 12, 1993 
                HELP-PROMPT:      Type a Number between 0 and 9999, 0 Decimal Digits 
                DESCRIPTION:      MailMan tests against this field to determine how many times it should try a particular protocol before giving up and trying the next one.  This field is used in conjunction with the Priority field.  When the the Number
                                  of tries to transmit the messages in the queue exceeds the value of this field, a Transmission Failure bulletin is sent to the Postmaster.  

                TECHNICAL DESCR:   
                                   


4.21,1.2        TYPE                   0;4 SET

                                  'FTP' FOR File Transfer Protocol; 
                                  'SMTP' FOR Simple Mail Transfer Protocol; 
                                  'TELNET' FOR Interactive / TalkMan; 
                                  'TCPCHAN' FOR TCP/IP Channel; 
                                  'OTHER' FOR OTHER; 
                LAST EDITED:      DEC 18, 1993 
                DESCRIPTION:
                                  Each transmission script must be given a type so that it can be handled properly.  


4.21,1.3        PHYSICAL LINK / DEVICE 0;5 FREE TEXT

                INPUT TRANSFORM:  K:$L(X)>30!($L(X)<1) X I $D(X) S %ZIS="NQRS",IOP=X D ^%ZIS K:POP X S:$D(X) X=ION W:$D(X) " Stored internally as ",X D ^%ZISC S IOP="HOME" D ^%ZIS K IOP,%ZIS
                LAST EDITED:      MAR 12, 1993 
                HELP-PROMPT:      Answer must be 3-30 characters in length. 
                DESCRIPTION:      The physical link is the channel that the transmission will take place on.  This field is always a free text pointer to the device file.  See field 17 / Physical Link Device for more information.  
                                   

                TECHNICAL DESCR:
                                   

                NOTES:            XXXX--CAN'T BE ALTERED EXCEPT BY PROGRAMMER


4.21,1.4        NETWORK ADDRESS (MAILMAN HOST) 0;6 FREE TEXT

                INPUT TRANSFORM:  K:$L(X)>50!($L(X)<3) X
                LAST EDITED:      MAR 12, 1993 
                HELP-PROMPT:      Answer must be 3-50 characters in length. 
                DESCRIPTION:
                                  The network address is that identifier that, used appropriately on the physical link, allows specification of the system to be contacted.  


4.21,1.5        OUT OF SERVICE         0;7 SET

                                  '0' FOR in service; 
                                  '1' FOR out of service; 
                LAST EDITED:      APR 22, 2002 
                HELP-PROMPT:      If you don't want this script to be used, set this field to 1 otherwise leave it blank or set it to zero. 
                DESCRIPTION:
                                  This is the preferred field to set to take a script out of service, to prevent it from being used.  


4.21,2          TEXT                   1;0   WORD-PROCESSING #4.22   (NOWRAP)

                DESCRIPTION:
                                  This is the text of the script.  See description above.  


4.21,99         TRANSMISSION SCRIPT NOTES NOTES;0   WORD-PROCESSING #4.299   (NOWRAP)

                LAST EDITED:      APR 05, 1993 
                DESCRIPTION:
                                  Keep notes that are important for systems management here.  




4.2,4.2       NOTES                  5;0   WORD-PROCESSING #4.25   (NOWRAP)

              DESCRIPTION:
                                NETWORK NOTES should be used to document idiosyncracies which occur when communicating with the domain in question.  


4.2,5         SYNONYM                2;0 Multiple #4.23

              DESCRIPTION:
                                Other names by which this domain is known.  


4.23,.01        SYNONYM                0;1 FREE TEXT (Multiply asked)

                INPUT TRANSFORM:  K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>64!($L(X)<1) X
                LAST EDITED:      APR 22, 2002 
                HELP-PROMPT:      Answer must be 1-64 characters in length. 
                DESCRIPTION:
                                  Another name by which this Domain is known. For example, "San Francisco, CA" can be a synonym of the domain "SANFRANCISCO.MED.VA.GOV".  

                CROSS-REFERENCE:  4.2^C^MUMPS 
                                  1)= S ^DIC(4.2,"C",$E(X,1,64),DA(1),DA)=""
                                  2)= K ^DIC(4.2,"C",$E(X,1,64),DA(1),DA)




4.2,5.5       STATION                0;13 FREE TEXT

              STATION                                                                                                          
              INPUT TRANSFORM:  K:$L(X)>7!($L(X)<3)!'(X?3N.E) X
              LAST EDITED:      APR 23, 1986 
              HELP-PROMPT:      ANSWER MUST BE 3-7 CHARACTERS IN LENGTH 
              DESCRIPTION:
                                This is the domain's station.  


4.2,6         MCTS ROUTING INDICATOR 0;4 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>3!($L(X)<3)!'(X?3U) X
              LAST EDITED:      MAR 20, 1985 
              HELP-PROMPT:      Must be three upper case letters 
              DESCRIPTION:
                                This is a three character routing indicator for the VADATS network's MCTS terminal system.  


4.2,6.2       DHCP ROUTING INDICATOR 0;14 FREE TEXT

              INPUT TRANSFORM:  K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>3!($L(X)<3) X
              LAST EDITED:      JUL 10, 1990 
              HELP-PROMPT:      ANSWER MUST BE 3 CHARACTERS IN LENGTH 
              DESCRIPTION:
                                This field is used to route messages when they arrive at the central data collection point at the domain FOC-AUSTIN.VA.GOV.  

              CROSS-REFERENCE:  4.2^AD 
                                1)= S ^DIC(4.2,"AD",$E(X,1,30),DA)=""
                                2)= K ^DIC(4.2,"AD",$E(X,1,30),DA)


4.2,6.5       MAILMAN HOST           0;12 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>20!($L(X)<2) X
              LAST EDITED:      JUN 02, 1994 
              HELP-PROMPT:      Answer must be 2-20 characters in length. 
              DESCRIPTION:
                                This field contains a logical or physical address of a remote domain so that a connection can occur.  


4.2,6.6       FTP BLOB IP ADDRESS    IP;1 FREE TEXT

              INPUT TRANSFORM:  K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>15!($L(X)<7)!'(X?1.N1"."1.N1"."1.N1"."1.N) X
              LAST EDITED:      FEB 19, 1993 
              HELP-PROMPT:      Enter a valid IP address in the form:  nn.nn.nn.nn 
              DESCRIPTION:
                                This field contains the IP address of this host so that it can be used as the to address for files that will be sent to this domain.  


4.2,6.61      TCP/IP POLL FLAG       P;1 SET

                                '0' FOR DO NOT POLL; 
                                '1' FOR POLL; 
              LAST EDITED:      JUL 06, 1992 
              DESCRIPTION:      This is the information needed to log in the FTP service of this site if the standard route needs to be overridden.  
                                .

              CROSS-REFERENCE:  4.2^D 
                                1)= S ^DIC(4.2,"D",$E(X,1,30),DA)=""
                                2)= K ^DIC(4.2,"D",$E(X,1,30),DA)
                                3)= If this cross reference is deleted, netmail may not be transmitted.

              CROSS-REFERENCE:  4.2^ATCP 
                                1)= S ^DIC(4.2,"ATCP",$E(X,1,30),DA)=""
                                2)= K ^DIC(4.2,"ATCP",$E(X,1,30),DA)
                                This cross reference is used by XMRTCP to poll domains that have messages to be sent out.  TaskMan does not run on the node that has the TCP/IP device sometimes.  



4.2,6.62      FTP                    3;1 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>61!($L(X)<7) X I X'?2.E1";"2.E K X
              LAST EDITED:      APR 26, 1993 
              HELP-PROMPT:      Answer must be 7-61 characters in length. 
              DESCRIPTION:      This is the information needed by to log into an FTP service to send files.  It is overridden by the site if they wish in their Kernel Site Parameters and sent to the sender in real time.  
                                 
                                There are really two pieces of data in this field separated by a ";".  Piece number 1 is the username.  Piece number 2 is the password.  

              NOTES:            XXXX--CAN'T BE ALTERED EXCEPT BY PROGRAMMER


4.2,6.7       FTP BLOB DIRECTORY     FTP-DIR;1 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>40!($L(X)<2) X
              LAST EDITED:      MAR 01, 1993 
              HELP-PROMPT:      Answer must be 2-40 characters in length. 
              DESCRIPTION:
                                This field contains the directory into which a file should be put by a domain sending it files to attach to multimedia messages.  


4.2,7         *OUTGOING MESSAGE COUNT 0;5 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
              LAST EDITED:      OCT 09, 1985 
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 0 AND 9999999 
              DESCRIPTION:      This is a count of the number of messages which have been transmitted to this domain since the counter was last set to zero.  
                                 
                                As of Kernel 7 this field was *'d and it will be deleted 18 month from the date that the community was notified (6/5/90).  


4.2,8         *OUTGOING LINE COUNT   0;6 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
              LAST EDITED:      OCT 09, 1985 
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 0 AND 99999999 
              DESCRIPTION:      This is a count of the number of lines of text which have been transmitted to this domain since the counter was last set to zero.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,9         *INCOMING MESSAGE COUNT 0;7 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 0 AND 99999999 
              DESCRIPTION:      This is a count of the number of messages which have been received from this domain since the counter was last reset.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,10        *INCOMING LINE COUNT   0;8 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 0 AND 99999999 
              DESCRIPTION:      This is the count of the number of lines which have been received from this domain since the counter was last reset.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,11        *ERROR LAST REPORTED   0;9 DATE

              INPUT TRANSFORM:  S %DT="ET" D ^%DT S X=Y K:Y<1 X
              LAST EDITED:      OCT 09, 1985 
              DESCRIPTION:      This is the date/time at which a physical link error was last reported to the network log device.  This timestamp is checked by the error reporting programs to insure that too many error messages are not sent.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,12        *NUMBER OF RECOVERABLE ERRORS 0;10 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
              LAST EDITED:      OCT 09, 1985 
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 0 AND 999999999 
              DESCRIPTION:      This is a count of the number of recoverable errors which have occurred while sending or receiving messages to or from this domain, since the counter was last set to zero.  Recoverable errors are errors which are detected
                                by checksums, etc,  which require retransmission of the line.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,13        *PROGRESS REPORT       3;1 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>20!($L(X)<6) X
              LAST EDITED:      FEB 11, 1986 
              HELP-PROMPT:      ANSWER MUST BE 6-20 CHARACTERS IN LENGTH 
              DESCRIPTION:      This field contains the time (in $H format) of the last time a queue dump routine reported its progress.  If this field is undefined, or more than 5 minutes old, then the queue is assumed to be inactive.  If not, then the
                                MESSAGE IN TRANSIT and LAST LINE TRANSMITTED fields indicate the current status of the queue transmission.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,14        *MESSAGE IN TRANSIT    3;2 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
              LAST EDITED:      FEB 11, 1986 
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 0 AND 999999999 
              DESCRIPTION:      If this field exists, it indicates the message number of message currently being transmitted.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,15        *LINE LAST TRANSMITTED 3;3 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
              LAST EDITED:      FEB 11, 1986 
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 0 AND 99999999 
              DESCRIPTION:      If this field exists, it indicates the line number of the MESSAGE IN TRANSIT which was sent just prior to the last PROGRESS REPORT.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,15.4      *ERRORS THIS TRANSMISSION 3;4 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
              LAST EDITED:      NOV 24, 1986 
              HELP-PROMPT:      TYPE A WHOLE NUMBER BETWEEN 0 AND 999 
              DESCRIPTION:      Number of "soft" errors (non-fatal) that have been encountered during the course of the current transmission.  This is the total number of soft errors encountered during entire transmission.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,15.5      *RATE OF TRANSMISSION  3;5 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999.99)!(X<0)!(X?.E1"."3N.N) X
              LAST EDITED:      NOV 24, 1986 
              HELP-PROMPT:      TYPE A NUMBER BETWEEN 0 AND 99999.99 
              DESCRIPTION:      Transmission rate (in seconds) since the posting of the last progress report.  This number is based on the number of lines trasmitted since the last progress report and the number of seconds since the last progress report.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,15.6      *CHARACTERS REC'D      3;8 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
              LAST EDITED:      OCT 26, 1989 
              HELP-PROMPT:      Type a Number between 0 and 99999999, 0 Decimal Digits 
              DESCRIPTION:      This is the number of characters received during the current process and is for the current message.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,15.7      *CHARACTERS SENT       3;9 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
              LAST EDITED:      OCT 26, 1989 
              HELP-PROMPT:      Type a Number between 0 and 99999999, 0 Decimal Digits 
              DESCRIPTION:      This is the number of characters in the current message that have been sent so far.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,16        POLL LIST              4;0 Multiple #4.24

              LAST EDITED:      FEB 28, 1986 
              HELP-PROMPT:      ANSWER MUST BE 1-15 CHARACTERS IN LENGTH 
              DESCRIPTION:
                                If this domain belongs to a poll list, then it will be activated when a background poller is activated to send mail to this list.  


4.24,.01        POLL LIST              0;1 NUMBER (Multiply asked)

                INPUT TRANSFORM:  K:+X'=X!(X>1000)!(X<0)!(X?.E1"."3N.N) X
                LAST EDITED:      JUN 25, 1986 
                HELP-PROMPT:      Enter a poll list number between 0 and 1000 
                DESCRIPTION:
                                  If this domain belongs to a poll list, then it will be activated when a background poller is activated to send mail to this list.  

                CROSS-REFERENCE:  4.2^AB 
                                  1)= S ^DIC(4.2,"AB",$E(X,1,30),DA(1),DA)=""
                                  2)= K ^DIC(4.2,"AB",$E(X,1,30),DA(1),DA)




4.2,17        PHYSICAL LINK DEVICE   0;17 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>30!($L(X)<1) X I $D(X) S %ZIS="NQRS",IOP=X D ^%ZIS K:POP X S:$D(X) X=ION W:$D(X) " Stored internally as ",X D ^%ZISC S IOP="HOME" D ^%ZIS K IOP,%ZIS
              LAST EDITED:      DEC 17, 1991 
              HELP-PROMPT:      MUST MATCH THE NAME FIELD IN THE DEVICE FILE. 
              DESCRIPTION:      This field is used for network mail ONLY.  If there is no device named in field 1.3 of the TRANSMISSION SCRIPT, then this device is used.  If no device is named in this field, then the device named in field 8.25 of file
                                4.3 is used.  If there's no device named in that field, then there is no device.  If this domain has a physical link such as a miniengine port, a direct line to another cpu, a modem, etc., this port should be named in this
                                field to direct network mail to the proper output device.  There must be an entry in the DEVICE file for this cpu port.  The name field of the DEVICE file can be a literal (such as MINIENGINE-OUT or CPU B LINK) but the $I
                                field must match with the correct cpu $I.  If the link is physically located on a cpu other than the one the network mail is being sent from, the local DEVICE file MUST reflect that in the OTHER CPU field of the device
                                file if the transmission is to take place immediately.  If it is not identified properly, the message will go into a queue to be processed the next time a network message is sent from or recieved on the processor with the
                                physical link.  NOTE:  The DEVICE files on all cpu's must have matching device names to correctly route the message to the proper cpu for sending.  

              NOTES:            XXXX--CAN'T BE ALTERED EXCEPT BY PROGRAMMER


4.2,20        LEVEL 1 NAME            ;  COMPUTED

              MUMPS CODE:       X ^DD(4.2,20,9.2) S Y(4.2,20,5)=X S X=".",X=$L(Y(4.2,20,5),X),X=$P(Y(4.2,20,2),Y(4.2,20,3),X)
                                9.2 = S Y(4.2,20,1)=$S($D(^DIC(4.2,D0,0)):^(0),1:"") S X=$P(Y(4.2,20,1),U,1),Y(4.2,20,2)=X S X=".",Y(4.2,20,3)=X,Y(4.2,20,4)=X S X=$P(Y(4.2,20,1),U,1)
              ALGORITHM:        $P(NAME,".",$L(NAME,"."))
              DESCRIPTION:
                                The most right "." piece of a domain name ($P(domain-name,".",$L(domain-name,".")) 


4.2,21        LEVEL 2 NAME            ;  COMPUTED

              MUMPS CODE:       X ^DD(4.2,21,9.2) S Y(4.2,21,5)=X S X=".",X=$L(Y(4.2,21,5),X)-1,Y(4.2,21,6)=X S X=9,X=$P(Y(4.2,21,2),Y(4.2,21,3),Y(4.2,21,6),X)
                                9.2 = S Y(4.2,21,1)=$S($D(^DIC(4.2,D0,0)):^(0),1:"") S X=$P(Y(4.2,21,1),U,1),Y(4.2,21,2)=X S X=".",Y(4.2,21,3)=X,Y(4.2,21,4)=X S X=$P(Y(4.2,21,1),U,1)
              ALGORITHM:        $P(NAME,".",$L(NAME,".")-1)
              DESCRIPTION:
                                $P(domain-name,".",$L(domain-name,".")-1) 


4.2,22        LEVEL 3 NAME            ;  COMPUTED

              MUMPS CODE:       X ^DD(4.2,22,9.2) S Y(4.2,22,5)=X S X=".",X=$L(Y(4.2,22,5),X)-2,Y(4.2,22,6)=X S X=9,X=$P(Y(4.2,22,2),Y(4.2,22,3),Y(4.2,22,6),X)
                                9.2 = S Y(4.2,22,1)=$S($D(^DIC(4.2,D0,0)):^(0),1:"") S X=$P(Y(4.2,22,1),U,1),Y(4.2,22,2)=X S X=".",Y(4.2,22,3)=X,Y(4.2,22,4)=X S X=$P(Y(4.2,22,1),U,1)
              ALGORITHM:        $P(NAME,".",$L(NAME,".")-2)
              DESCRIPTION:
                                $P(domain-name,".",$L(domain-name,".")-2) 


4.2,23        LEVEL 4 NAME            ;  COMPUTED

              MUMPS CODE:       X ^DD(4.2,23,9.2) S Y(4.2,23,5)=X S X=".",X=$L(Y(4.2,23,5),X)-3,Y(4.2,23,6)=X S X=9,X=$P(Y(4.2,23,2),Y(4.2,23,3),Y(4.2,23,6),X)
                                9.2 = S Y(4.2,23,1)=$S($D(^DIC(4.2,D0,0)):^(0),1:"") S X=$P(Y(4.2,23,1),U,1),Y(4.2,23,2)=X S X=".",Y(4.2,23,3)=X,Y(4.2,23,4)=X S X=$P(Y(4.2,23,1),U,1)
                                9.3 = X ^DD(4.2,23,9.2) S Y(4.2,23,5)=X,X=".",Y(4.2,23,6)=X,X=$L(Y(4.2,23,5),X),Y(4.2,23,6)=X,Y(4.2,23,7)=X S X=9
              ALGORITHM:        $P(NAME,".",$L(NAME,".")-3)
              LAST EDITED:      APR 06, 1987 
              DESCRIPTION:
                                $P(domain-name,".",$L(domain-name,".")-3) 


4.2,24        *NETWORK DEVICE        3;6 FREE TEXT

              INPUT TRANSFORM:  K:$L(X)>9!($L(X)<1) X
              LAST EDITED:      MAR 01, 1988 
              HELP-PROMPT:      ANSWER MUST BE 1-9 CHARACTERS IN LENGTH 
              DESCRIPTION:
                                SEE FIELD 7 ABOUT '*'.  


4.2,25        *TRANSMISSION TASK#    3;7 NUMBER

              INPUT TRANSFORM:  K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
              LAST EDITED:      SEP 22, 1989 
              HELP-PROMPT:      Type a Number between 1 and 99999999, 0 Decimal Digits 
              DESCRIPTION:      The transmission task# points to the TaskMan task that has been generated to handle delivery of messages to the domain in background.  
                                 
                                SEE FIELD 7 ABOUT '*'.  


4.2,50        DIRECTORY REQUESTS FLAG 50;1 NUMBER

              INPUT TRANSFORM:  I $S(X="":0,X\1'=X:1,X>99:1,1:0) K X
              LAST EDITED:      SEP 02, 1993 
              HELP-PROMPT:      Type a Number between 0 and 99, 0 Decimal Digits 
              DESCRIPTION:      This field controls whether or not the XMMGR-DIRECTORY-ALL option will send a message requesting the user directory for the domain.  
                                 
                                If the value is null or zero, no request will be made.  If the value is a positive integer, a request will be made at the same time as other domains with the same number in this field are made.  A task must be set up and
                                scheduled for each number assigned using the XMDIR-REQUEST-ALL option, which is then run every 90 days (or according to what you change the reschedule value to).  

              NOTES:            XXXX--CAN'T BE ALTERED EXCEPT BY PROGRAMMER

              CROSS-REFERENCE:  4.2^AE 
                                1)= S ^DIC(4.2,"AE",$E(X,1,30),DA)=""
                                2)= K ^DIC(4.2,"AE",$E(X,1,30),DA)


4.2,100       *MESSAGE STATISTICS MONTH 100;0   WORD-PROCESSING #4.25   (NOWRAP)

              DESCRIPTION:      Message statistics are collected by month.  
                                 
                                SEE FIELD 7 ABOUT '*' 



      FILES POINTED TO                      FIELDS

DOMAIN (#4.2)                     RELAY DOMAIN (#2)



INPUT TEMPLATE(S):
XM DOMAIN                     JUN 18, 2009@09:26  USER #17   

PRINT TEMPLATE(S):
CAPTIONED                                         USER #0    
XMHOSTLIST                    APR 09, 1987        USER #0                                                                                                                                                                                     DOMAIN HOST LIST
     This template may be used to produce a list of domains with pertinent
     network routing information.

SORT TEMPLATE(S):

FORM(S)/BLOCK(S):